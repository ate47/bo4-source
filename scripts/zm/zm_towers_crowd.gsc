#using scripts\autogenerated\luielems\zm\zm_towers_crowd_meter;
#using scripts\core_common\array_shared;
#using scripts\core_common\callbacks_shared;
#using scripts\core_common\clientfield_shared;
#using scripts\core_common\flag_shared;
#using scripts\core_common\fx_shared;
#using scripts\core_common\lui_shared;
#using scripts\core_common\math_shared;
#using scripts\core_common\scene_shared;
#using scripts\core_common\struct;
#using scripts\core_common\util_shared;
#using scripts\zm_common\callbacks;
#using scripts\zm_common\zm_audio;
#using scripts\zm_common\zm_characters;
#using scripts\zm_common\zm_devgui;
#using scripts\zm_common\zm_net;
#using scripts\zm_common\zm_powerups;
#using scripts\zm_common\zm_score;
#using scripts\zm_common\zm_trial;
#using scripts\zm_common\zm_utility;
#using scripts\zm_common\zm_vo;
#using scripts\zm_common\zm_zonemgr;

#namespace zm_towers_crowd;

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x5b8b3669, Offset: 0x6f0
// Size: 0x2f4
function init()
{
    /#
        level thread function_fbf74c49();
    #/
    
    level.var_cbb3dff5 = spawnstruct();
    level.var_cbb3dff5.a_players = [];
    level flag::init( "any_round_has_started" );
    level._effect[ #"hash_7bd75ae600e0a590" ] = "maps/zm_towers/fx8_crowd_reward_flower_exp";
    level._effect[ #"hash_4c4f96aa02c32a2a" ] = "maps/zm_towers/fx8_crowd_reward_flower_trail";
    level thread function_8e83be5d();
    callback::on_connect( &function_74fc278 );
    callback::on_actor_killed( &function_2d074f7d );
    zm_powerups::powerup_set_statless_powerup( "dung" );
    zm_powerups::powerup_set_statless_powerup( "rock" );
    zm_powerups::register_powerup( "dung", &function_1493a309 );
    zm_powerups::add_zombie_powerup( "dung", #"p7_dung_camel_pile_03", #"zombie_powerup_free_perk", &zm_powerups::func_should_never_drop, 1, 0, 0 );
    zm_powerups::function_f0eb47d8( "dung", 1 );
    zm_powerups::function_80b4c5e0( "dung", 1 );
    level thread function_5d6119de();
    level thread function_259aa822();
    level thread function_9c5fb1b5();
    level thread function_e45ccfd7();
    callback::on_spawned( &function_bdb90d4 );
    a_t_crowd_damage = getentarray( "t_crowd_damage", "targetname" );
    array::thread_all( a_t_crowd_damage, &crowd_damage_trigger );
    level.var_857878e6 = &function_857878e6;
    
    /#
        zm_net::network_choke_init( "<dev string:x38>", 3 );
    #/
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x44d4e6cd, Offset: 0x9f0
// Size: 0x64
function function_857878e6()
{
    if ( !level.var_210ce105 zm_towers_crowd_meter::is_open( self ) )
    {
        level.var_210ce105 zm_towers_crowd_meter::open( self );
    }
    
    level.var_210ce105 zm_towers_crowd_meter::set_visible( self, 1 );
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x6270d437, Offset: 0xa60
// Size: 0xb8
function function_e45ccfd7()
{
    level endon( #"end_game" );
    level flag::init( #"hash_a39684f0887e82e" );
    
    while ( true )
    {
        s_waitresult = level waittill( #"homunculus_thrown" );
        
        if ( zm_utility::is_ee_enabled() && isdefined( s_waitresult.e_homunculus ) )
        {
            s_waitresult.e_homunculus thread function_55d09221();
        }
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x3b05a294, Offset: 0xb20
// Size: 0x11a
function function_55d09221()
{
    self endon( #"death" );
    level endon( #"end_game" );
    a_t_crowd_damage = getentarray( "t_crowd_damage", "targetname" );
    
    while ( true )
    {
        foreach ( t_crowd_damage in a_t_crowd_damage )
        {
            if ( self istouching( t_crowd_damage ) && !level flag::get( #"hash_a39684f0887e82e" ) )
            {
                level thread function_10ef0925( self );
            }
        }
        
        wait 1;
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x36977936, Offset: 0xc48
// Size: 0x1fa
function crowd_damage_trigger()
{
    self endon( #"death" );
    level endon( #"end_game" );
    
    while ( true )
    {
        s_waitresult = self waittill( #"damage" );
        player = s_waitresult.attacker;
        
        if ( isplayer( player ) )
        {
            player.var_7df228aa.var_56b97916 += s_waitresult.amount;
            b_explosive_damage = 0;
            
            if ( isdefined( s_waitresult.mod ) )
            {
                switch ( s_waitresult.mod )
                {
                    case #"mod_explosive":
                    case #"mod_grenade":
                    case #"mod_grenade_splash":
                    case #"mod_projectile_splash":
                        b_explosive_damage = 1;
                        break;
                }
            }
            
            if ( isdefined( s_waitresult.weapon ) && isdefined( s_waitresult.weapon.isrocketlauncher ) && s_waitresult.weapon.isrocketlauncher )
            {
                b_explosive_damage = 1;
            }
            
            if ( player.var_7df228aa.var_56b97916 >= 150 )
            {
                player.var_7df228aa.var_56b97916 = 0;
                
                if ( b_explosive_damage )
                {
                    player function_b8dfa139( #"hash_4122108abe671eb7" );
                    wait 1;
                }
            }
        }
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x4756ef66, Offset: 0xe50
// Size: 0x5e, Type: bool
function function_aa0b6eb()
{
    n_amount = self.var_7df228aa.var_def266a8;
    
    if ( n_amount >= 50 || isdefined( self.var_7df228aa.var_4b801cbf ) && self.var_7df228aa.var_4b801cbf )
    {
        return true;
    }
    
    return false;
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0xee1f2fc1, Offset: 0xeb8
// Size: 0x5e, Type: bool
function function_88c02b18()
{
    n_amount = self.var_7df228aa.var_def266a8;
    
    if ( n_amount <= -50 || isdefined( self.var_7df228aa.var_83b82812 ) && self.var_7df228aa.var_83b82812 )
    {
        return true;
    }
    
    return false;
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0x3e333f3f, Offset: 0xf20
// Size: 0xe8
function function_5c1184e( b_enable = 1 )
{
    foreach ( var_9e45f43d in array( "siege_crowds_grp27", "siege_zm_crowds_indv_1", "siege_zm_crowds_indv_2", "siege_zm_crowds_indv_3", "siege_zm_crowds_indv_4", "siege_zm_crowds_indv_5" ) )
    {
        if ( b_enable )
        {
            showmiscmodels( var_9e45f43d );
            continue;
        }
        
        hidemiscmodels( var_9e45f43d );
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0xc1ea173d, Offset: 0x1010
// Size: 0x5c
function function_696a8df0( b_enable = 1 )
{
    if ( b_enable )
    {
        showmiscmodels( "siege_crowds_outro" );
        return;
    }
    
    hidemiscmodels( "siege_crowds_outro" );
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0x9ab199ed, Offset: 0x1078
// Size: 0x5c
function function_aec5ec5a( b_enable = 1 )
{
    if ( b_enable )
    {
        showmiscmodels( "siege_crowds_battle" );
        return;
    }
    
    hidemiscmodels( "siege_crowds_battle" );
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0x21eb0682, Offset: 0x10e0
// Size: 0x158
function function_8237489a( b_enable = 1 )
{
    if ( b_enable )
    {
        foreach ( var_9e45f43d in array( "siege_crowd_stand_a_grp27", "siege_crowd_stand_b_grp27", "siege_crowd_stand_c_grp27", "siege_crowd_stand_d_grp27" ) )
        {
            showmiscmodels( var_9e45f43d );
        }
        
        return;
    }
    
    foreach ( var_9e45f43d in array( "siege_crowd_stand_a_grp27", "siege_crowd_stand_b_grp27", "siege_crowd_stand_c_grp27", "siege_crowd_stand_d_grp27" ) )
    {
        hidemiscmodels( var_9e45f43d );
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0xbd5d6939, Offset: 0x1240
// Size: 0x1d4
function function_10ef0925( e_homunculus )
{
    self notify( "142d6aa2cb9b2691" );
    self endon( "142d6aa2cb9b2691" );
    level.var_cc3a64f1 = level.var_9a992b09;
    level.var_9a992b09 = 1;
    level flag::set( #"hash_a39684f0887e82e" );
    level clientfield::set( "crowd_react", 2 );
    wait 3;
    function_8237489a( 1 );
    function_5c1184e( 0 );
    level clientfield::set( "" + #"crowd_react_wave", 1 );
    
    if ( isdefined( e_homunculus ) )
    {
        e_homunculus waittill( #"death" );
    }
    else
    {
        wait 30;
    }
    
    level clientfield::set( "" + #"crowd_react_wave", 0 );
    wait 3;
    function_5c1184e( 1 );
    function_8237489a( 0 );
    level.var_9a992b09 = level.var_cc3a64f1;
    level.var_cc3a64f1 = undefined;
    level flag::clear( #"hash_a39684f0887e82e" );
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x5518a52d, Offset: 0x1420
// Size: 0x54
function function_259aa822()
{
    level endon( #"end_game" );
    level waittill( #"start_of_round" );
    level flag::set( "any_round_has_started" );
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0x60e2a64b, Offset: 0x1480
// Size: 0x110
function function_1493a309( e_player )
{
    e_player zm_score::player_reduce_points( "take_specified", 250 );
    
    if ( self.powerup_name === "dung" )
    {
        e_player playsound( #"hash_66a500811a472fac" );
        e_player clientfield::set_to_player( "" + #"pickup_dung", 1 );
        e_player util::delay( 5, "disconnect", &clientfield::set_to_player, "" + #"pickup_dung", 0 );
        level notify( #"hash_694f58e8bc5dd48", { #e_player:e_player } );
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0x38c24fee, Offset: 0x1598
// Size: 0x334
function function_2d074f7d( params )
{
    switch ( self.archetype )
    {
        case #"stoker":
        case #"gladiator":
            str_event = #"heavy_kill";
            break;
        case #"tiger":
            str_event = #"tiger_kill";
            break;
        case #"blight_father":
            str_event = #"miniboss_kill";
            break;
        case #"elephant":
            str_event = #"elephant_kill";
            break;
        case #"elephant_rider":
            str_event = #"hash_29a47f9b217e8b1c";
            break;
        case #"zombie":
            if ( self.missinglegs )
            {
                str_event = #"crawler_kill";
            }
            
            break;
    }
    
    if ( isplayer( params.eattacker ) && isalive( params.eattacker ) )
    {
        player = params.eattacker;
        
        if ( !isdefined( player.var_7df228aa.n_zombie_kills ) )
        {
            player.var_7df228aa.n_zombie_kills = 0;
        }
        
        player.var_7df228aa.n_zombie_kills++;
        player notify( #"hash_4093e684a539c91d" );
        
        if ( player.var_7df228aa.n_zombie_kills == 10 )
        {
            player function_b8dfa139( #"hash_158076998c9b511f" );
        }
        
        if ( str_event === #"heavy_kill" )
        {
            if ( !player.var_7df228aa.var_92e4bf1b )
            {
                player.var_7df228aa.var_92e4bf1b = 1;
                player function_b8dfa139( #"hash_131b705484b2876" );
            }
            else
            {
                player function_b8dfa139( #"heavy_kill" );
            }
            
            return;
        }
        
        if ( str_event === #"tiger_kill" )
        {
            if ( !player.var_7df228aa.var_c2b08a )
            {
                player.var_7df228aa.var_c2b08a = 1;
                player function_b8dfa139( #"hash_19fccc380453c9fa" );
            }
            
            return;
        }
        
        if ( isdefined( str_event ) )
        {
            player function_b8dfa139( str_event );
        }
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x8e317c72, Offset: 0x18d8
// Size: 0x15c
function function_74fc278()
{
    self.var_7df228aa = spawnstruct();
    self.var_7df228aa.var_712856c1 = #"hash_4977f8aaa598d06c";
    self.var_7df228aa.var_21ce4da6 = #"hash_4977f8aaa598d06c";
    self.var_7df228aa.var_def266a8 = 0;
    self.var_7df228aa.var_e6476b32 = 0;
    self.var_7df228aa.var_a120aedc = 0;
    self.var_7df228aa.var_56b97916 = 0;
    self.var_7df228aa.n_zombie_kills = 0;
    self.var_7df228aa.var_92e4bf1b = 0;
    self.var_7df228aa.var_c2b08a = 0;
    self.var_7df228aa.var_f0c7d50a = 0;
    self flag::init( "crowd_item_thrown_out_for_round_good" );
    self flag::init( "crowd_item_thrown_out_for_round_bad" );
    self thread function_7469866d();
    self thread function_1b848dc2();
    self thread function_be93759e();
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0xf0060567, Offset: 0x1a40
// Size: 0xcc
function function_be93759e()
{
    level endon( #"end_game" );
    self endon( #"disconnect" );
    level flag::wait_till( "any_round_has_started" );
    
    if ( !level.var_210ce105 zm_towers_crowd_meter::is_open( self ) && !zm_utility::is_standard() )
    {
        level.var_210ce105 zm_towers_crowd_meter::set_visible( self, 1 );
        level.var_210ce105 zm_towers_crowd_meter::open( self );
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 2
// Checksum 0x163ebe36, Offset: 0x1b18
// Size: 0x9c
function function_51ea46f3( b_enable = 1, b_close = 0 )
{
    level.var_210ce105 zm_towers_crowd_meter::set_visible( self, b_enable );
    
    if ( b_close )
    {
        if ( level.var_210ce105 zm_towers_crowd_meter::is_open( self ) )
        {
            level.var_210ce105 zm_towers_crowd_meter::close( self );
        }
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x373156ad, Offset: 0x1bc0
// Size: 0xe8
function function_1b848dc2()
{
    level endon( #"end_game" );
    self endon( #"disconnect" );
    level flag::wait_till( "start_zombie_round_logic" );
    
    while ( true )
    {
        s_waitresult = self waittilltimeout( 240, #"hash_4093e684a539c91d", #"death" );
        
        if ( isalive( self ) && s_waitresult._notify == "timeout" )
        {
            self function_b8dfa139( #"hash_1ecab55fd270f67b" );
        }
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x3304bf1c, Offset: 0x1cb0
// Size: 0x710
function function_5d6119de()
{
    level endon( #"end_game" );
    level flag::init( #"crowd_throw_item_immediate" );
    level flag::init( #"hash_1a9f6d0c1e7684b4" );
    level flag::init( #"hash_80fa0541e21f744" );
    level.var_8cdff3aa = 20;
    callback::function_74872db6( &function_74872db6 );
    level flag::wait_till( "start_zombie_round_logic" );
    
    while ( true )
    {
        level.var_8cdff3aa = 20;
        
        while ( level.var_8cdff3aa > 0 && !level flag::get( "crowd_throw_item_immediate" ) )
        {
            wait 1;
            level.var_8cdff3aa -= 1;
        }
        
        var_be79df4d = [];
        var_f8b181cf = [];
        
        foreach ( player in level.players )
        {
            if ( isalive( player ) && player.var_7df228aa.var_def266a8 >= 40 )
            {
                if ( !isdefined( var_be79df4d ) )
                {
                    var_be79df4d = [];
                }
                else if ( !isarray( var_be79df4d ) )
                {
                    var_be79df4d = array( var_be79df4d );
                }
                
                if ( !isinarray( var_be79df4d, player ) )
                {
                    var_be79df4d[ var_be79df4d.size ] = player;
                }
            }
            
            if ( isalive( player ) && player.var_7df228aa.var_def266a8 <= -40 )
            {
                if ( !isdefined( var_f8b181cf ) )
                {
                    var_f8b181cf = [];
                }
                else if ( !isarray( var_f8b181cf ) )
                {
                    var_f8b181cf = array( var_f8b181cf );
                }
                
                if ( !isinarray( var_f8b181cf, player ) )
                {
                    var_f8b181cf[ var_f8b181cf.size ] = player;
                }
            }
        }
        
        if ( var_be79df4d.size && var_f8b181cf.size )
        {
            var_a841b5f1 = arraycombine( var_be79df4d, var_f8b181cf, 0, 0 );
            e_target_player = function_79b77be1( var_a841b5f1 );
        }
        else if ( var_be79df4d.size )
        {
            e_target_player = function_79b77be1( var_be79df4d );
        }
        else if ( var_f8b181cf.size )
        {
            e_target_player = function_79b77be1( var_f8b181cf );
        }
        else if ( level flag::get( #"crowd_throw_item_immediate" ) )
        {
            e_target_player = function_79b77be1( level.activeplayers );
        }
        
        if ( !isalive( e_target_player ) )
        {
            continue;
        }
        
        str_player_zone = e_target_player zm_zonemgr::get_player_zone();
        var_2bd26cff = e_target_player.var_7df228aa.var_def266a8;
        n_time = 10;
        
        while ( isalive( e_target_player ) && !level flag::get( #"crowd_throw_item_immediate" ) && n_time > 0 )
        {
            if ( str_player_zone === "zone_starting_area_ra" || str_player_zone === "zone_starting_area_odin" || str_player_zone === "zone_starting_area_danu" || str_player_zone === "zone_starting_area_zeus" )
            {
                break;
            }
            
            str_player_zone = e_target_player zm_zonemgr::get_player_zone();
            wait 1;
            n_time -= 1;
        }
        
        if ( !isalive( e_target_player ) || n_time <= 0 || isdefined( e_target_player.var_7df228aa.var_4c83f6a2 ) && e_target_player.var_7df228aa.var_4c83f6a2 )
        {
            level flag::clear( #"crowd_throw_item_immediate" );
            continue;
        }
        
        if ( level flag::get( #"crowd_throw_item_immediate" ) || function_fd02425d( var_2bd26cff ) && !e_target_player flag::get( #"crowd_item_thrown_out_for_round_good" ) || function_e94dbaa9( var_2bd26cff ) && !e_target_player flag::get( #"crowd_item_thrown_out_for_round_bad" ) )
        {
            if ( !level flag::get( #"crowd_throw_item_immediate" ) )
            {
                if ( function_fd02425d( var_2bd26cff ) )
                {
                    e_target_player flag::set( #"crowd_item_thrown_out_for_round_good" );
                }
                else if ( function_e94dbaa9( var_2bd26cff ) )
                {
                    e_target_player flag::set( #"crowd_item_thrown_out_for_round_bad" );
                }
            }
            
            e_target_player thread crowd_throw_item( var_2bd26cff );
        }
        
        level flag::clear( #"crowd_throw_item_immediate" );
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0x7114332b, Offset: 0x23c8
// Size: 0x22, Type: bool
function function_fd02425d( var_2bd26cff )
{
    if ( var_2bd26cff >= 40 )
    {
        return true;
    }
    
    return false;
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0x824316f8, Offset: 0x23f8
// Size: 0x22, Type: bool
function function_e94dbaa9( var_2bd26cff )
{
    if ( var_2bd26cff <= -40 )
    {
        return true;
    }
    
    return false;
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0xc5f50e04, Offset: 0x2428
// Size: 0x150
function function_79b77be1( a_players )
{
    if ( level flag::get( #"crowd_throw_item_immediate" ) )
    {
        e_target_player = array::random( a_players );
    }
    else
    {
        foreach ( player in a_players )
        {
            var_def266a8 = player.var_7df228aa.var_def266a8;
            
            if ( function_fd02425d( var_def266a8 ) && !player flag::get( #"crowd_item_thrown_out_for_round_good" ) || function_e94dbaa9( var_def266a8 ) && !player flag::get( #"crowd_item_thrown_out_for_round_bad" ) )
            {
                e_target_player = player;
                break;
            }
        }
    }
    
    return e_target_player;
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x27c77623, Offset: 0x2580
// Size: 0xa8
function function_74872db6()
{
    foreach ( player in level.players )
    {
        player flag::clear( #"crowd_item_thrown_out_for_round_good" );
        player flag::clear( #"crowd_item_thrown_out_for_round_bad" );
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0x165261fd, Offset: 0x2630
// Size: 0xf0a
function crowd_throw_item( var_2bd26cff )
{
    self endon( #"death" );
    var_15230439 = struct::get_array( "s_crowd_item_start" );
    var_4f0ef489 = [];
    self.var_7df228aa.var_4c83f6a2 = 1;
    var_bec704d1 = 0;
    
    if ( var_2bd26cff <= -40 || level flag::get( #"hash_80fa0541e21f744" ) )
    {
        if ( level flag::get( #"hash_80fa0541e21f744" ) )
        {
            var_a714ee15 = arraycombine( array( "dung" ), array( "rock" ), 0, 0 );
        }
        else if ( var_2bd26cff <= -50 && level flag::get( "zm_towers_pap_quest_completed" ) )
        {
            var_a714ee15 = array( "dung" );
        }
        else
        {
            var_a714ee15 = array( "rock" );
        }
    }
    else if ( var_2bd26cff >= 40 || level flag::get( #"hash_1a9f6d0c1e7684b4" ) )
    {
        if ( level flag::get( #"hash_1a9f6d0c1e7684b4" ) )
        {
            var_a714ee15 = arraycombine( array( "double_points", "bonus_points_player", "insta_kill", "carpenter" ), array( "hero_weapon_power", "fire_sale" ), 0, 0 );
        }
        else if ( var_2bd26cff >= 50 && !zm_utility::is_standard() )
        {
            var_a714ee15 = array( "hero_weapon_power", "fire_sale" );
        }
        else
        {
            var_a714ee15 = array( "double_points", "bonus_points_player", "insta_kill", "carpenter" );
        }
        
        var_bec704d1 = 1;
    }
    else
    {
        var_a714ee15 = array( "double_points", "bonus_points_player", "insta_kill", "carpenter" );
        var_bec704d1 = 1;
    }
    
    if ( var_bec704d1 && var_2bd26cff >= 50 )
    {
        self.var_7df228aa.var_4b801cbf = 1;
    }
    else if ( !var_bec704d1 && var_2bd26cff <= -50 )
    {
        self.var_7df228aa.var_83b82812 = 1;
    }
    
    self function_dbe08c92( undefined, var_bec704d1 );
    
    foreach ( s_loc in var_15230439 )
    {
    }
    
    while ( true )
    {
        if ( !isalive( self ) )
        {
            return;
        }
        
        foreach ( s_loc in var_15230439 )
        {
            if ( self util::is_player_looking_at( s_loc.origin, 0.95, 1, self ) )
            {
                if ( !isdefined( var_4f0ef489 ) )
                {
                    var_4f0ef489 = [];
                }
                else if ( !isarray( var_4f0ef489 ) )
                {
                    var_4f0ef489 = array( var_4f0ef489 );
                }
                
                var_4f0ef489[ var_4f0ef489.size ] = s_loc;
            }
        }
        
        if ( var_4f0ef489.size )
        {
            break;
        }
        
        waitframe( 1 );
    }
    
    var_4d611aa2 = array::random( var_4f0ef489 );
    s_target_loc = array::random( struct::get_array( var_4d611aa2.target ) );
    
    foreach ( s_loc in var_15230439 )
    {
        if ( isdefined( s_loc.var_d18b181c ) )
        {
            s_loc.var_d18b181c delete();
        }
    }
    
    level flag::clear( #"hash_80fa0541e21f744" );
    level flag::clear( #"hash_1a9f6d0c1e7684b4" );
    str_powerup = array::random( var_a714ee15 );
    
    if ( !isdefined( level.zombie_powerups[ str_powerup ] ) )
    {
        playsoundatposition( #"hash_339b376fb02738f5", var_4d611aa2.origin );
        
        if ( str_powerup === "rock" )
        {
            e_item = util::spawn_model( #"hash_5a78e7591a2e5e39", var_4d611aa2.origin, var_4d611aa2.angles );
            e_item fx::play( #"hash_4c4f96aa02c32a2a", e_item.origin, e_item.angles, "crowd_item_fly_fx_stop", 1 );
            e_item setscale( 8 );
            n_time = e_item zm_utility::fake_physicslaunch( self geteye(), 5000 );
            wait n_time;
            
            if ( isalive( self ) )
            {
                v_player_angles = self getplayerangles();
                v_pos = self geteye() + anglestoforward( v_player_angles ) * 100;
                e_item moveto( v_pos, 0.05 );
                self dodamage( 5, v_pos );
                self shellshock( #"pain_zm", 3 );
                self playsound( #"hash_270c80055a8d296c" );
                
                /#
                    self thread zm_net::network_choke_action( "<dev string:x38>", &function_f3e454c1, self.name + "<dev string:x52>" );
                #/
            }
            
            wait 0.05;
            
            if ( isdefined( e_item ) )
            {
                e_item notify( #"crowd_item_fly_fx_stop" );
                e_item delete();
            }
        }
    }
    else
    {
        playsoundatposition( #"hash_339b376fb02738f5", var_4d611aa2.origin );
        var_354ec191 = array::random( array( #"p8_fxanim_zm_towers_crowd_jar_01_mod", #"p8_fxanim_zm_towers_crowd_jar_02_mod", #"p8_fxanim_zm_towers_crowd_jar_03_mod" ) );
        e_item = util::spawn_model( var_354ec191, var_4d611aa2.origin, var_4d611aa2.angles );
        e_item fx::play( #"hash_4c4f96aa02c32a2a", e_item.origin, e_item.angles, "crowd_item_fly_fx_stop", 1 );
        n_time = e_item zm_utility::fake_physicslaunch( s_target_loc.origin, 600 );
        wait n_time;
        fx::play( #"hash_7bd75ae600e0a590", s_target_loc.origin, s_target_loc.angles + ( 270, 0, 0 ) );
        e_item notify( #"crowd_item_fly_fx_stop" );
        e_item.origin = s_target_loc.origin;
        
        switch ( var_354ec191 )
        {
            case #"p8_fxanim_zm_towers_crowd_jar_01_mod":
                s_target_loc thread scene::play( "p8_fxanim_zm_towers_crowd_jar_01_bundle", e_item );
                break;
            case #"p8_fxanim_zm_towers_crowd_jar_02_mod":
                s_target_loc thread scene::play( "p8_fxanim_zm_towers_crowd_jar_02_bundle", e_item );
                break;
            case #"p8_fxanim_zm_towers_crowd_jar_03_mod":
                s_target_loc thread scene::play( "p8_fxanim_zm_towers_crowd_jar_03_bundle", e_item );
                break;
        }
        
        earthquake( 0.3, 0.5, s_target_loc.origin, 256 );
        
        if ( isalive( self ) )
        {
            e_powerup = zm_powerups::specific_powerup_drop( str_powerup, s_target_loc.origin );
            
            if ( isdefined( e_powerup ) )
            {
                if ( str_powerup === "dung" )
                {
                    e_powerup moveto( groundtrace( e_powerup.origin + ( 0, 0, 8 ), e_powerup.origin + ( 0, 0, -100000 ), 0, e_powerup )[ #"position" ] + ( 0, 0, 0 ), 0.25 );
                    e_powerup setscale( 3 );
                    e_powerup playloopsound( "zmb_dung_lp" );
                }
                
                s_waitresult = e_powerup waittill( #"powerup_grabbed", #"powerup_timedout", #"hacked", #"death" );
                var_264cf1f9 = s_waitresult.e_grabber;
                
                if ( isplayer( var_264cf1f9 ) && var_bec704d1 == 1 )
                {
                    var_264cf1f9 notify( #"hash_62f05feef69e1ed4" );
                }
                
                if ( isplayer( var_264cf1f9 ) && isplayer( self ) )
                {
                    if ( var_264cf1f9 == self )
                    {
                        /#
                            self thread zm_net::network_choke_action( "<dev string:x38>", &function_f3e454c1, var_264cf1f9.name + "<dev string:x84>" + str_powerup + "<dev string:x90>" );
                        #/
                    }
                    else
                    {
                        if ( str_powerup == "hero_weapon_power" || str_powerup == "bonus_points_player" )
                        {
                            var_264cf1f9.var_7df228aa.var_a120aedc++;
                            
                            if ( var_264cf1f9.var_7df228aa.var_a120aedc > 5 )
                            {
                                var_264cf1f9 function_b8dfa139( #"hash_3d85834be3aff6d2" );
                            }
                            else
                            {
                                var_264cf1f9 function_b8dfa139( #"stole_crowd_item" );
                            }
                        }
                        
                        /#
                            thread zm_net::network_choke_action( "<dev string:x38>", &function_f3e454c1, var_264cf1f9.name + "<dev string:xa3>" + self.name + "<dev string:xad>" + str_powerup );
                        #/
                    }
                }
            }
        }
    }
    
    if ( isdefined( self ) )
    {
        self.var_7df228aa.var_4c83f6a2 = undefined;
        self.var_7df228aa.var_4b801cbf = undefined;
        self.var_7df228aa.var_83b82812 = undefined;
        self function_dbe08c92( self.var_7df228aa.var_21ce4da6 );
    }
    
    level.var_8cdff3aa = 20;
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0x9a686f3c, Offset: 0x3548
// Size: 0x5a4
function function_b8dfa139( str_event )
{
    if ( isdefined( level.var_9a992b09 ) && level.var_9a992b09 )
    {
        return;
    }
    
    var_ac39950d = 0;
    
    switch ( str_event )
    {
        case #"hash_158076998c9b511f":
            var_9c93ba8f = 5;
            break;
        case #"hash_19fccc380453c9fa":
            var_9c93ba8f = 3;
            break;
        case #"crawler_kill":
            var_9c93ba8f = 1;
            break;
        case #"hash_131b705484b2876":
            var_9c93ba8f = 15;
            var_ac39950d = 1;
            break;
        case #"heavy_kill":
            var_9c93ba8f = 8;
            break;
        case #"miniboss_kill":
            var_9c93ba8f = 20;
            
            if ( !self.var_7df228aa.var_f0c7d50a )
            {
                self.var_7df228aa.var_f0c7d50a = 1;
                var_ac39950d = 1;
            }
            
            break;
        case #"elephant_kill":
            var_9c93ba8f = 30;
            var_ac39950d = 1;
            break;
        case #"hash_29a47f9b217e8b1c":
            var_9c93ba8f = 10;
            var_ac39950d = 1;
            break;
        case #"hash_c65bc15b1aeb1bb":
            var_9c93ba8f = 5;
            break;
        case #"hash_c65bd15b1aeb36e":
            var_9c93ba8f = 5;
            break;
        case #"hash_c65be15b1aeb521":
            var_9c93ba8f = 5;
            break;
        case #"hash_2048e4bc4cd51960":
            var_9c93ba8f = 5;
            break;
        case #"trap_activated":
            var_9c93ba8f = 5;
            var_ac39950d = 1;
            break;
        case #"trap_kill":
            var_9c93ba8f = 1;
            break;
        case #"hash_689abcb17111463":
            var_9c93ba8f = 3;
            break;
        case #"hash_197ae1fc115dc636":
            var_9c93ba8f = 7;
            break;
        case #"hash_5d587a946bd4f958":
            var_9c93ba8f = 15;
            var_ac39950d = 1;
            break;
        case #"hash_5986c925a370e137":
            var_9c93ba8f = 20;
            break;
        case #"hash_300454c11a18ae03":
            var_9c93ba8f = 5;
            break;
        case #"hash_39efd1a80488c531":
            var_9c93ba8f = 10;
            break;
        case #"hash_69fc3ba948618464":
            var_9c93ba8f = 15;
            break;
        case #"hash_4122108abe671eb7":
            var_9c93ba8f = -25;
            break;
        case #"hash_7d48d521481272cf":
            var_9c93ba8f = -2;
            break;
        case #"player_down":
            var_9c93ba8f = -7;
            break;
        case #"player_death":
            var_9c93ba8f = -13;
            break;
        case #"hash_1f2dfda53e67bf22":
            var_9c93ba8f = -12;
            break;
        case #"crawler_created":
            var_9c93ba8f = -1;
            break;
        case #"hash_1ecab55fd270f67b":
            var_9c93ba8f = -20;
            break;
        case #"hash_1dc206ff31de03eb":
            var_9c93ba8f = -2;
            break;
        case #"stole_crowd_item":
            var_9c93ba8f = -1;
            break;
        case #"hash_3d85834be3aff6d2":
            var_9c93ba8f = -15;
            break;
        case #"broken_shield":
            var_9c93ba8f = -10;
            break;
        case #"hazard_hit":
            var_9c93ba8f = -10;
            break;
        case #"hash_74fc45698491be88":
            var_9c93ba8f = -15;
            break;
        default:
            var_9c93ba8f = 0;
            break;
    }
    
    /#
        self thread zm_net::network_choke_action( "<dev string:x38>", &function_f3e454c1, str_event );
    #/
    
    if ( self.var_7df228aa.var_def266a8 <= 0 && self.var_7df228aa.var_def266a8 + var_9c93ba8f >= 0 || self.var_7df228aa.var_def266a8 >= 0 && self.var_7df228aa.var_def266a8 + var_9c93ba8f <= 0 )
    {
        var_ac39950d = 1;
    }
    
    self.var_7df228aa.var_def266a8 += var_9c93ba8f;
    self.var_7df228aa.var_def266a8 = math::clamp( self.var_7df228aa.var_def266a8, -50, 50 );
    self thread function_9da7999d( var_9c93ba8f, var_ac39950d, str_event );
}

/#

    // Namespace zm_towers_crowd/zm_towers_crowd
    // Params 1
    // Checksum 0xf55423f9, Offset: 0x3af8
    // Size: 0xd4, Type: dev
    function function_f3e454c1( str_text )
    {
        if ( ishash( str_text ) )
        {
            if ( isplayer( self ) )
            {
                self iprintlnbold( function_9e72a96( str_text ) );
            }
            else
            {
                iprintlnbold( function_9e72a96( str_text ) );
            }
            
            return;
        }
        
        if ( isplayer( self ) )
        {
            self iprintlnbold( str_text );
            return;
        }
        
        iprintlnbold( str_text );
    }

#/

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 3
// Checksum 0x203a0af3, Offset: 0x3bd8
// Size: 0x2ac
function function_9da7999d( var_9c93ba8f = 0, var_ac39950d = 0, str_event )
{
    n_amount = self.var_7df228aa.var_def266a8;
    
    if ( !isdefined( level.var_c71183aa ) )
    {
        level.var_c71183aa = 0;
    }
    
    level.var_2d2de57a = level.var_c71183aa;
    var_db5bdee0 = #"hash_12d62358eda9bdf1";
    
    if ( n_amount <= -50 )
    {
        var_db5bdee0 = #"hash_752852f7958f9112";
        level.var_c71183aa = 1;
    }
    else if ( n_amount > -50 && n_amount <= -25 )
    {
        var_db5bdee0 = #"hash_1cf3b5099b38de89";
        level.var_c71183aa = 1;
    }
    else if ( n_amount > -25 && n_amount <= 0 )
    {
        var_db5bdee0 = #"hash_4977f8aaa598d06c";
        level.var_c71183aa = 0;
    }
    else if ( n_amount > 0 && n_amount <= 25 )
    {
        var_db5bdee0 = #"hash_7dc7bbe5b45f4135";
        level.var_c71183aa = 2;
    }
    else if ( n_amount > 25 && n_amount < 50 )
    {
        var_db5bdee0 = #"hash_ad45e7c545f8482";
        level.var_c71183aa = 3;
    }
    else if ( n_amount >= 50 )
    {
        var_db5bdee0 = #"hash_1fe268f088f7e729";
        level.var_c71183aa = 3;
    }
    
    self.var_7df228aa.var_21ce4da6 = var_db5bdee0;
    self function_dbe08c92( self.var_7df228aa.var_21ce4da6 );
    
    if ( !self.var_7df228aa.var_e6476b32 || var_ac39950d )
    {
        self thread function_acab98ce( var_db5bdee0, var_9c93ba8f, var_ac39950d, str_event );
        return;
    }
    
    /#
        self thread zm_net::network_choke_action( "<dev string:x38>", &function_f3e454c1, "<dev string:xb3>" );
    #/
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 4
// Checksum 0x10339daf, Offset: 0x3e90
// Size: 0x49c
function function_acab98ce( var_82c32aa7, var_9c93ba8f, var_ac39950d = 0, str_event )
{
    str_name = self.name;
    var_65b29bff = "";
    var_aee1a869 = 0;
    var_31571f8a = 0;
    
    if ( ( self.var_7df228aa.var_712856c1 == #"hash_752852f7958f9112" || self.var_7df228aa.var_712856c1 == #"hash_1cf3b5099b38de89" || self.var_7df228aa.var_712856c1 == #"hash_4977f8aaa598d06c" ) && ( var_82c32aa7 == #"hash_752852f7958f9112" || var_82c32aa7 == #"hash_1cf3b5099b38de89" || var_82c32aa7 == #"hash_4977f8aaa598d06c" ) && var_9c93ba8f > 0 )
    {
        var_aee1a869 = 1;
    }
    else if ( ( self.var_7df228aa.var_712856c1 == #"hash_7dc7bbe5b45f4135" || self.var_7df228aa.var_712856c1 == #"hash_ad45e7c545f8482" || self.var_7df228aa.var_712856c1 == #"hash_1fe268f088f7e729" ) && ( var_82c32aa7 == #"hash_7dc7bbe5b45f4135" || var_82c32aa7 == #"hash_ad45e7c545f8482" || var_82c32aa7 == #"hash_1fe268f088f7e729" ) && var_9c93ba8f <= 0 )
    {
        var_31571f8a = 1;
    }
    
    level clientfield::set( "crowd_react", level.var_c71183aa );
    self.var_7df228aa.var_712856c1 = var_82c32aa7;
    
    switch ( var_82c32aa7 )
    {
        case #"hash_752852f7958f9112":
            var_ee93032f = 0;
            break;
        case #"hash_1cf3b5099b38de89":
            var_ee93032f = 1;
            break;
        case #"hash_4977f8aaa598d06c":
            var_ee93032f = 2;
            break;
        case #"hash_7dc7bbe5b45f4135":
            var_ee93032f = 3;
            break;
        case #"hash_ad45e7c545f8482":
            var_ee93032f = 4;
            break;
        case #"hash_1fe268f088f7e729":
            var_ee93032f = 5;
            break;
    }
    
    if ( var_aee1a869 )
    {
        var_ee93032f = 7;
    }
    else if ( var_31571f8a )
    {
        var_ee93032f = 6;
    }
    
    if ( level flag::get( "special_round" ) )
    {
        if ( var_ee93032f != 5 )
        {
            self clientfield::set_to_player( "snd_crowd_react", var_ee93032f );
        }
    }
    else if ( isdefined( level.var_412df700 ) && level.var_412df700 )
    {
        if ( var_ee93032f != 5 )
        {
            self clientfield::set_to_player( "snd_crowd_react", var_ee93032f );
        }
    }
    else
    {
        self clientfield::set_to_player( "snd_crowd_react", var_ee93032f );
        self notify( #"hash_722941ef1aaab69f", { #var_ac39950d:var_ac39950d, #str_event:str_event } );
    }
    
    /#
        self thread zm_net::network_choke_action( "<dev string:x38>", &function_f3e454c1, function_9e72a96( var_82c32aa7 ) + self.name );
    #/
    
    if ( !var_ac39950d )
    {
        self thread function_692a63ae();
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0xa755107, Offset: 0x4338
// Size: 0x378
function function_bdb90d4()
{
    level endon( #"end_game" );
    self endon( #"death" );
    
    if ( zm_utility::is_standard() )
    {
        return;
    }
    
    var_a849ed96 = array( #"hash_752852f7958f9112", #"hash_1cf3b5099b38de89", #"hash_4977f8aaa598d06c", #"hash_7dc7bbe5b45f4135", #"hash_ad45e7c545f8482", #"hash_1fe268f088f7e729" );
    var_8f46fbc3 = self.var_7df228aa.var_21ce4da6;
    
    for ( var_8b88a695 = array::find( var_a849ed96, var_8f46fbc3 ); true ; var_8b88a695 = var_4245b6a3 )
    {
        b_announcer = 0;
        s_waitresult = self waittill( #"hash_722941ef1aaab69f" );
        var_ac39950d = s_waitresult.var_ac39950d;
        var_aa1b1bfd = self.var_7df228aa.var_21ce4da6;
        var_4245b6a3 = array::find( var_a849ed96, var_aa1b1bfd );
        
        if ( var_aa1b1bfd == var_8f46fbc3 || s_waitresult.str_event == #"hash_197ae1fc115dc636" || s_waitresult.str_event == #"hash_5d587a946bd4f958" )
        {
            continue;
        }
        
        switch ( var_aa1b1bfd )
        {
            case #"hash_752852f7958f9112":
                str_category = "negative_terrible";
                break;
            case #"hash_1cf3b5099b38de89":
                str_category = "negative_poor";
                break;
            case #"hash_4977f8aaa598d06c":
                str_category = "negative_poor";
                break;
            case #"hash_7dc7bbe5b45f4135":
                b_announcer = 1;
                str_category = "positive_good";
                break;
            case #"hash_ad45e7c545f8482":
                b_announcer = 1;
                str_category = "positive_great";
                break;
            case #"hash_1fe268f088f7e729":
                b_announcer = 1;
                str_category = "positive_immac";
                break;
        }
        
        if ( var_4245b6a3 < var_8b88a695 && var_aa1b1bfd != #"hash_752852f7958f9112" )
        {
            b_announcer = 0;
            str_category = "negative_poor";
        }
        
        if ( var_4245b6a3 > var_8b88a695 && var_aa1b1bfd != #"hash_1fe268f088f7e729" )
        {
            str_category = "positive_good";
        }
        
        self thread function_1d9a9b89( str_category, b_announcer, var_ac39950d );
        var_8f46fbc3 = var_aa1b1bfd;
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 3
// Checksum 0xf02d7544, Offset: 0x46b8
// Size: 0x12c
function function_1d9a9b89( str_category, b_announcer, var_ac39950d )
{
    self notify( "3768bf148fdac027" );
    self endon( "3768bf148fdac027" );
    self endon( #"death" );
    
    if ( b_announcer )
    {
        level zm_audio::sndannouncerplayvox( #"hash_5f0f1e699aa7e761", self );
    }
    else
    {
        wait 2;
    }
    
    if ( !var_ac39950d && isdefined( self.var_7df228aa.var_e6476b32 ) && self.var_7df228aa.var_e6476b32 )
    {
        return;
    }
    
    str_zone = self zm_zonemgr::get_player_zone();
    
    if ( !isinarray( level.var_3d702dc9, str_zone ) )
    {
        return;
    }
    
    self thread zm_vo::function_a2bd5a0c( #"vox_crowd_" + str_category, 0, 0, undefined, 1, 1 );
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0xb583f95d, Offset: 0x47f0
// Size: 0x2dc
function function_9c5fb1b5()
{
    var_748cd0a0 = 0;
    level.var_412df700 = 0;
    
    if ( zm_trial::is_trial_mode() || zm_utility::is_standard() || zm_utility::is_tutorial() )
    {
        return;
    }
    
    while ( true )
    {
        level waittill( #"end_of_round" );
        level.var_412df700 = 1;
        
        if ( !( isdefined( level.var_9a992b09 ) && level.var_9a992b09 ) )
        {
            if ( zm_audio::sndmusicsystem_isabletoplay() )
            {
                foreach ( player in level.players )
                {
                    if ( !( isdefined( var_748cd0a0 ) && var_748cd0a0 ) )
                    {
                        player clientfield::set_to_player( "snd_crowd_react", 10 );
                    }
                }
            }
        }
        
        var_748cd0a0 = 0;
        level waittill( #"start_of_round" );
        level util::delay( 18, "end_of_round", &function_6ddff873 );
        
        if ( !( isdefined( level.var_9a992b09 ) && level.var_9a992b09 ) )
        {
            if ( zm_audio::sndmusicsystem_isabletoplay() )
            {
                foreach ( player in level.players )
                {
                    if ( level flag::get( "special_round" ) )
                    {
                        level notify( #"hash_37b8eeaed85f1b4c" );
                        player clientfield::set_to_player( "snd_crowd_react", 14 );
                        var_748cd0a0 = 1;
                        level thread function_75d594ec();
                        continue;
                    }
                    
                    player clientfield::set_to_player( "snd_crowd_react", 9 );
                }
            }
        }
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0xb26495af, Offset: 0x4ad8
// Size: 0xe8
function function_6ddff873()
{
    level.var_412df700 = 0;
    
    if ( !( isdefined( level.var_9a992b09 ) && level.var_9a992b09 ) )
    {
        if ( !level flag::get( "special_round" ) )
        {
            foreach ( player in level.players )
            {
                if ( player function_aa0b6eb() )
                {
                    player clientfield::set_to_player( "snd_crowd_react", 5 );
                }
            }
        }
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x7a3e8780, Offset: 0x4bc8
// Size: 0x148
function function_75d594ec()
{
    level endon( #"end_game" );
    level waittill( #"hash_7b9245ff51f3d4f7" );
    
    if ( zm_audio::sndmusicsystem_isabletoplay() )
    {
        foreach ( player in level.players )
        {
            player clientfield::set_to_player( "snd_crowd_react", 15 );
        }
        
        return;
    }
    
    foreach ( player in level.players )
    {
        player clientfield::set_to_player( "snd_crowd_react", 16 );
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 2
// Checksum 0x400297a4, Offset: 0x4d18
// Size: 0x2e2
function function_dbe08c92( var_82c32aa7, var_bec704d1 )
{
    if ( zm_utility::is_standard() )
    {
        return;
    }
    
    if ( !level.var_210ce105 zm_towers_crowd_meter::is_open( self ) )
    {
        level.var_210ce105 zm_towers_crowd_meter::open( self );
    }
    
    if ( isdefined( self.var_7df228aa.var_4c83f6a2 ) && self.var_7df228aa.var_4c83f6a2 )
    {
        if ( isdefined( var_bec704d1 ) )
        {
            if ( var_bec704d1 )
            {
                if ( self.var_7df228aa.var_def266a8 >= 50 )
                {
                    level.var_210ce105 zm_towers_crowd_meter::set_state( self, "crowd_power_up_available_good" );
                }
                else
                {
                    level.var_210ce105 zm_towers_crowd_meter::set_state( self, "crowd_power_up_available_good_partial" );
                }
                
                return;
            }
            
            if ( self.var_7df228aa.var_def266a8 <= -50 )
            {
                level.var_210ce105 zm_towers_crowd_meter::set_state( self, "crowd_power_up_available_bad" );
                return;
            }
            
            level.var_210ce105 zm_towers_crowd_meter::set_state( self, "crowd_power_up_available_bad_partial" );
        }
        
        return;
    }
    
    if ( isdefined( var_82c32aa7 ) )
    {
        switch ( var_82c32aa7 )
        {
            case #"hash_752852f7958f9112":
                level.var_210ce105 zm_towers_crowd_meter::set_state( self, "crowd_loathes" );
                break;
            case #"hash_1cf3b5099b38de89":
                level.var_210ce105 zm_towers_crowd_meter::set_state( self, "crowd_hates" );
                break;
            case #"hash_4977f8aaa598d06c":
                level.var_210ce105 zm_towers_crowd_meter::set_state( self, "crowd_no_love" );
                break;
            case #"hash_7dc7bbe5b45f4135":
                level.var_210ce105 zm_towers_crowd_meter::set_state( self, "crowd_warm_up" );
                break;
            case #"hash_ad45e7c545f8482":
                level.var_210ce105 zm_towers_crowd_meter::set_state( self, "crowd_likes" );
                break;
            case #"hash_1fe268f088f7e729":
                level.var_210ce105 zm_towers_crowd_meter::set_state( self, "crowd_loves" );
                break;
        }
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0, eflags: 0x4
// Checksum 0xa653e028, Offset: 0x5008
// Size: 0xd2
function private function_692a63ae()
{
    self notify( "5a2e6094bb4e37c6" );
    self endon( "5a2e6094bb4e37c6" );
    self endon( #"disconnect" );
    
    /#
        if ( level flag::get( "<dev string:xf6>" ) )
        {
            return;
        }
    #/
    
    self.var_7df228aa.var_e6476b32 = 1;
    
    if ( self.var_7df228aa.var_def266a8 >= 50 || self.var_7df228aa.var_def266a8 <= -50 )
    {
        n_cooldown = 20;
    }
    else
    {
        n_cooldown = 10;
    }
    
    wait n_cooldown;
    self.var_7df228aa.var_e6476b32 = 0;
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0xa937cc82, Offset: 0x50e8
// Size: 0x228
function function_8e83be5d()
{
    level endon( #"end_game" );
    
    while ( true )
    {
        waitresult = level waittill( #"crawler_created", #"trap_kill", #"trap_activated" );
        
        switch ( waitresult._notify )
        {
            case #"crawler_created":
                e_player = waitresult.player;
                
                if ( !isplayer( e_player ) )
                {
                    continue;
                }
                
                if ( waitresult.weapon === level.w_crossbow || waitresult.weapon === level.w_crossbow_upgraded )
                {
                    str_event = #"hash_689abcb17111463";
                }
                else
                {
                    waitresult.zombie function_308a32f0( e_player );
                }
                
                break;
            case #"trap_activated":
                e_player = waitresult.trap_activator;
                str_event = #"trap_activated";
                break;
            case #"trap_kill":
                if ( isplayer( waitresult.e_victim ) )
                {
                    e_player = waitresult.e_victim;
                    str_event = #"hash_1f2dfda53e67bf22";
                }
                else
                {
                    e_player = waitresult.e_trap.activated_by_player;
                    str_event = #"trap_kill";
                }
                
                break;
        }
        
        if ( isplayer( e_player ) && isdefined( str_event ) )
        {
            e_player function_b8dfa139( str_event );
        }
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 0
// Checksum 0x76377efc, Offset: 0x5318
// Size: 0x266
function function_7469866d()
{
    level endon( #"end_game" );
    self endon( #"disconnect" );
    
    while ( true )
    {
        waitresult = self waittill( #"player_downed", #"bled_out", #"player_did_a_revive", #"hash_53620e40c7e139b9", #"destroy_riotshield", #"hash_74fc45698491be88", #"hazard_hit" );
        
        switch ( waitresult._notify )
        {
            case #"player_downed":
                str_event = #"player_down";
                break;
            case #"bled_out":
                str_event = #"player_death";
                break;
            case #"player_did_a_revive":
                if ( waitresult.revived_player != self )
                {
                    if ( waitresult.revived_player.bleedout_time < 5 )
                    {
                        str_event = #"hash_5d587a946bd4f958";
                    }
                    else
                    {
                        str_event = #"hash_197ae1fc115dc636";
                    }
                }
                
                break;
            case #"hash_53620e40c7e139b9":
                str_event = #"hash_1dc206ff31de03eb";
                break;
            case #"destroy_riotshield":
                str_event = #"broken_shield";
                break;
            case #"hazard_hit":
                str_event = #"hazard_hit";
                break;
            case #"hash_74fc45698491be88":
                str_event = #"hash_74fc45698491be88";
                break;
        }
        
        if ( isdefined( str_event ) )
        {
            self function_b8dfa139( str_event );
            str_event = undefined;
        }
    }
}

// Namespace zm_towers_crowd/zm_towers_crowd
// Params 1
// Checksum 0x7c08b411, Offset: 0x5588
// Size: 0x70
function function_308a32f0( e_player )
{
    self endon( #"death" );
    e_player endon( #"disconnect" );
    
    while ( isalive( self ) )
    {
        wait 10;
        e_player function_b8dfa139( #"crawler_created" );
    }
}

/#

    // Namespace zm_towers_crowd/zm_towers_crowd
    // Params 0
    // Checksum 0xeb78b753, Offset: 0x5600
    // Size: 0x40c, Type: dev
    function function_fbf74c49()
    {
        level flag::init( "<dev string:x116>" );
        level flag::init( "<dev string:xf6>" );
        zm_devgui::add_custom_devgui_callback( &function_e0bb973 );
        adddebugcommand( "<dev string:x136>" );
        adddebugcommand( "<dev string:x195>" );
        adddebugcommand( "<dev string:x1fd>" );
        adddebugcommand( "<dev string:x26b>" );
        adddebugcommand( "<dev string:x2d7>" );
        
        if ( getdvarint( #"zm_debug_ee", 0 ) )
        {
            adddebugcommand( "<dev string:x330>" );
        }
        
        adddebugcommand( "<dev string:x385>" );
        adddebugcommand( "<dev string:x3db>" );
        adddebugcommand( "<dev string:x44d>" );
        adddebugcommand( "<dev string:x49f>" );
        adddebugcommand( "<dev string:x4f7>" );
        adddebugcommand( "<dev string:x547>" );
        adddebugcommand( "<dev string:x5a1>" );
        adddebugcommand( "<dev string:x5fd>" );
        adddebugcommand( "<dev string:x65b>" );
        adddebugcommand( "<dev string:x6b9>" );
        adddebugcommand( "<dev string:x725>" );
        adddebugcommand( "<dev string:x7ac>" );
        adddebugcommand( "<dev string:x804>" );
        adddebugcommand( "<dev string:x868>" );
        adddebugcommand( "<dev string:x8d2>" );
        adddebugcommand( "<dev string:x93c>" );
        adddebugcommand( "<dev string:x9a6>" );
        adddebugcommand( "<dev string:xa0a>" );
        adddebugcommand( "<dev string:xa8e>" );
        adddebugcommand( "<dev string:xae2>" );
        adddebugcommand( "<dev string:xb38>" );
        adddebugcommand( "<dev string:xb93>" );
        adddebugcommand( "<dev string:xbef>" );
        adddebugcommand( "<dev string:xc4d>" );
        adddebugcommand( "<dev string:xccd>" + 240 + "<dev string:xd10>" );
        adddebugcommand( "<dev string:xd43>" );
        adddebugcommand( "<dev string:xdaf>" );
        adddebugcommand( "<dev string:xe2c>" );
        adddebugcommand( "<dev string:xe8b>" );
        adddebugcommand( "<dev string:xee7>" );
        level thread function_eb6ff6a5();
    }

    // Namespace zm_towers_crowd/zm_towers_crowd
    // Params 0
    // Checksum 0x37316710, Offset: 0x5a18
    // Size: 0x102, Type: dev
    function function_eb6ff6a5()
    {
        while ( true )
        {
            if ( level flag::get( "<dev string:x116>" ) )
            {
                foreach ( i, player in level.players )
                {
                    debug2dtext( ( 1100, 300 + 20 * i, 0 ), player.name + "<dev string:xf51>" + player.var_7df228aa.var_def266a8, undefined, undefined, undefined, 1 );
                }
            }
            
            waitframe( 1 );
        }
    }

    // Namespace zm_towers_crowd/zm_towers_crowd
    // Params 1
    // Checksum 0x4cf072c0, Offset: 0x5b28
    // Size: 0x8a2, Type: dev
    function function_e0bb973( cmd )
    {
        switch ( cmd )
        {
            case #"hash_b988aa7a2727ae5":
                level flag::set( #"crowd_throw_item_immediate" );
                level flag::set( #"hash_1a9f6d0c1e7684b4" );
                level flag::clear( #"hash_80fa0541e21f744" );
                break;
            case #"hash_4840e9ef3902deb3":
                level flag::set( #"crowd_throw_item_immediate" );
                level flag::clear( #"hash_1a9f6d0c1e7684b4" );
                level flag::set( #"hash_80fa0541e21f744" );
                break;
            case #"hash_4f715fd76b8686d":
                level flag::toggle( "<dev string:xf6>" );
                
                if ( level flag::get( "<dev string:xf6>" ) )
                {
                    thread zm_net::network_choke_action( "<dev string:x38>", &function_f3e454c1, "<dev string:xf67>" );
                    
                    foreach ( player in level.players )
                    {
                        player.var_7df228aa.var_e6476b32 = 0;
                    }
                }
                else
                {
                    thread zm_net::network_choke_action( "<dev string:x38>", &function_f3e454c1, "<dev string:xf96>" + 10 + "<dev string:xfc9>" );
                }
                
                break;
            case #"hash_f7e831658b8fb28":
                level flag::toggle( "<dev string:x116>" );
                break;
            case #"hash_4b6ce84335cf00ad":
                if ( !isdefined( level.var_55fdc354 ) )
                {
                    level.var_55fdc354 = 0;
                }
                
                switch ( level.var_55fdc354 )
                {
                    case 0:
                        iprintlnbold( "<dev string:xfdc>" );
                        function_5c1184e( 1 );
                        function_aec5ec5a( 0 );
                        function_696a8df0( 0 );
                        function_8237489a( 0 );
                        break;
                    case 1:
                        iprintlnbold( "<dev string:xff7>" );
                        function_aec5ec5a( 1 );
                        function_5c1184e( 0 );
                        function_696a8df0( 0 );
                        function_8237489a( 0 );
                        break;
                    case 2:
                        iprintlnbold( "<dev string:x1015>" );
                        function_696a8df0( 1 );
                        function_5c1184e( 0 );
                        function_aec5ec5a( 0 );
                        function_8237489a( 0 );
                        break;
                    case 3:
                        iprintlnbold( "<dev string:x102b>" );
                        function_8237489a( 1 );
                        function_5c1184e( 0 );
                        function_aec5ec5a( 0 );
                        function_696a8df0( 0 );
                        break;
                }
                
                level.var_55fdc354++;
                
                if ( zm_utility::is_ee_enabled() )
                {
                    if ( level.var_55fdc354 > 3 )
                    {
                        level.var_55fdc354 = 0;
                    }
                }
                else if ( level.var_55fdc354 > 2 )
                {
                    level.var_55fdc354 = 0;
                }
                
                wait 0.5;
                break;
            case #"hash_1e51753996594cc3":
                iprintlnbold( "<dev string:x1042>" );
                level.var_55fdc354 = 3;
                function_8237489a( 1 );
                function_5c1184e( 0 );
                function_aec5ec5a( 0 );
                function_696a8df0( 0 );
                level thread function_10ef0925();
                break;
            case #"elephant_kill":
            case #"hash_c65bc15b1aeb1bb":
            case #"hash_c65bd15b1aeb36e":
            case #"hash_c65be15b1aeb521":
            case #"broken_shield":
            case #"hash_158076998c9b511f":
            case #"stole_crowd_item":
            case #"hash_197ae1fc115dc636":
            case #"hash_19fccc380453c9fa":
            case #"hash_1dc206ff31de03eb":
            case #"hash_1ecab55fd270f67b":
            case #"hash_1f2dfda53e67bf22":
            case #"crawler_kill":
            case #"hash_2048e4bc4cd51960":
            case #"heavy_kill":
            case #"hash_29a47f9b217e8b1c":
            case #"hash_3d85834be3aff6d2":
            case #"hash_4122108abe671eb7":
            case #"trap_kill":
            case #"hash_131b705484b2876":
            case #"hash_689abcb17111463":
            case #"crawler_created":
            case #"trap_activated":
            case #"hash_5986c925a370e137":
            case #"hash_5d587a946bd4f958":
            case #"hazard_hit":
            case #"player_down":
            case #"player_death":
            case #"hash_74fc45698491be88":
            case #"miniboss_kill":
            case #"hash_7d48d521481272cf":
                foreach ( player in level.activeplayers )
                {
                    var_d80019d9 = hash( cmd );
                    player function_b8dfa139( var_d80019d9 );
                }
                
                break;
        }
    }

#/
